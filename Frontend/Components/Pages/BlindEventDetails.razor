@page "/BlindEventDetails/{EventId:guid}"
@using Frontend.Helpers
@using ESOF.WebApp.WebAPI.DtoClasses
@inject ApiHelper ApiHelper
@inject NavigationManager Navigation

<PageTitle>Blind Event Details</PageTitle>

<h1>Blind Event Details</h1>

@if (blindEvent == null)
{
    <p>Loading...</p>
}
else
{
    <div>
        <h2>@blindEvent.Name</h2>
        <p><strong>Date:</strong> @blindEvent.EventDate.ToString("yyyy-MM-dd")</p>
        <p><strong>Organizer:</strong> @blindEvent.Organizer.Email</p>

        <h3>Participants</h3>
        <ul>
            @if (blindEvent.Participants != null && blindEvent.Participants.Any())
            {
                @foreach (var participant in blindEvent.Participants)
                {
                    <li>@participant.User.Email</li>
                }
            }
            else
            {
                <li>No participants</li>
            }
        </ul>

        <a href="@($"/AddParticipant/{blindEvent.BlindEventId}")" class="btn btn-primary">Add Participant</a>
    </div>
}

@code {
    [Parameter]
    public Guid EventId { get; set; }

    private ResponseBlindEventDto blindEvent;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            blindEvent = await ApiHelper.GetFromApiAsync<ResponseBlindEventDto>($"api/BlindEvent/show/{EventId}");
            Console.WriteLine($"Loaded Blind Event: {System.Text.Json.JsonSerializer.Serialize(blindEvent)}");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading blind event details: {ex.Message}");
        }
    }
}