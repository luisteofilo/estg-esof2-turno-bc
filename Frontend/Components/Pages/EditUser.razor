@page "/edit-user/{UserId:guid}"
@using Frontend.Services
@inject UserService UserService
@inject NavigationManager NavigationManager

<PageTitle>Edit User</PageTitle>

<h1>Edit User</h1>

@if (user == null)
{
    <p><em>Loading user...</em></p>
}
else
{
    <EditForm Model="user" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <div class="alert alert-danger">@errorMessage</div>
        }

        <div class="form-group">
            <label for="email">Email:</label>
            <InputText id="email" class="form-control" @bind-Value="user.Email" />
        </div>
        <div class="form-group">
            <label for="firstName">First Name:</label>
            <InputText id="firstName" class="form-control" @bind-Value="user.FirstName" />
        </div>
        <div class="form-group">
            <label for="lastName">Last Name:</label>
            <InputText id="lastName" class="form-control" @bind-Value="user.LastName" />
        </div>
        <div class="form-group">
            <label for="address">Address:</label>
            <InputText id="address" class="form-control" @bind-Value="user.Address" />
        </div>
        <button type="submit" class="btn btn-success">Save</button>
    </EditForm>
}

@code {
    [Parameter]
    public Guid UserId { get; set; }

    private UserDto user;
    private string errorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            user = await UserService.GetUserById(UserId);
            if (user == null)
            {
                errorMessage = "User not found.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"An error occurred while loading the user: {ex.Message}";
        }
    }

    private async Task HandleValidSubmit()
    {
        try
        {
            var result = await UserService.Update(UserId, user);
            if (result)
            {
                NavigationManager.NavigateTo("/users");
            }
            else
            {
                errorMessage = "An error occurred while updating the user.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"An error occurred while updating the user: {ex.Message}";
        }
    }
}
