@page "/Post"
@using Frontend.Helpers
@using global::Helpers.ViewModels
@rendermode InteractiveServer
@attribute [StreamRendering]
@inject ApiHelper ApiHelper

<div class="post">
<div class="post-header">
    <img src="avatar.jpg" alt="Profile Image" class="profile-image" />
    <div class="post-info">
        <div class="post-author">@PostLine.Creator.email</div>
        <div class="post-meta">@PostLine.DateTimePost.ToString("dd/MM/yyyy HH:mm") · @((MarkupString)_visibilityTypePic) @PostLine.VisibilityType</div>
    </div>
    <div class="post-menu" @onfocusout="@(() => _menuVisible = false)">
        <button class="menu-button" @onclick="ToggleMenu">
            ⋯
        </button>
        <div class="menu-content @(_menuVisible ? "show" : "")">
            <button class="menu-button1" @onclick="EditPost">🗑️ Eliminar Publicação</button>
            <button class="menu-button1" @onclick="RemovePost">📝 Editar Publicação</button>
            <button class="menu-button1" @onclick="AddToFavorites">⭐ Adicionar aos Favoritos</button>
            <button class="menu-button1" @onclick="HidePost">🫣 Ocultar</button>
        </div>
    </div>
</div>
    <div class="post-event">
        📢
    </div>
    <div class="post-wine">
        🍷
    </div>
    <div class="post-content">
        @PostLine.Text
    </div>
    <div class="post-images">
        img
    </div>
    <div class="post-hashtag"><strong>#</strong></div>
    <div class="post-share">
        <button class="share-button" @onclick="SharePost">↪ Partilhar</button>
    </div>
</div>
    
    


@code{
  
    [Parameter] public FeedPost PostLine { get; set; } = new FeedPost()
    {
        Creator = new FeedPostUser()
    };
    private FeedPostList _feedPosts = new FeedPostList();
    private bool _menuVisible = false;
    
    private string _visibilityTypePic = "";
    
    private void ToggleMenu()
    {
        _menuVisible = !_menuVisible;
    }
    
    protected override async Task OnInitializedAsync()
    {
        try
        {
            _feedPosts.Posts = await ApiHelper.GetFromApiAsync<List<FeedPost>>("api/Post/index");
            PostLine = _feedPosts.Posts[0];
            SetVisibilityTypePic();
        }
        catch (ApplicationException ex)
        {
            Console.Error.WriteLine($"Failed to fetch posts: {ex.Message}");
        }
        catch (Exception ex)
        {
            Console.Error.WriteLine($"Error: {ex.Message}");
        }
    }
    
    private void SetVisibilityTypePic()
    {
        if (PostLine.VisibilityType == FeedPostVisibilityType.Public)
        {
            _visibilityTypePic = "<span>🌍</span>"; 
        }
        else if (PostLine.VisibilityType == FeedPostVisibilityType.Followers)
        {
            _visibilityTypePic = "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"13\" height=\"13\" fill=\"currentColor\" class=\"bi bi-people-fill\" viewBox=\"0 0 16 16\">" +
                                 "<path d=\"M7 14s-1 0-1-1 1-4 5-4 5 3 5 4-1 1-1 1zm4-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6m-5.784 6A2.24 2.24 0 0 1 5 13c0-1.355.68-2.75 1.936-3.72A6.3 6.3 0 0 0 5 9c-4 0-5 3-5 4s1 1 1 1zM4.5 8a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5\"/>" +
                                 "</svg>";
        }
        else
        {
            _visibilityTypePic = "<span></span>"; 
        }
    }
    private void EditPost()
    {
        _menuVisible = false;
    }

    private void RemovePost()
    {
        _menuVisible = false;
    }

    private void AddToFavorites()
    {
        _menuVisible = false;
    }

    private void HidePost()
    {
        _menuVisible = false;
    }
    private void SharePost()
    {
        _menuVisible = false;
    }
}