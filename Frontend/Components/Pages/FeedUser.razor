@page "/Feed/User/{userEmail}"
@using ESOF.WebApp.WebAPI.Services
@using Frontend.Helpers
@using global::Helpers.ViewModels
@using Microsoft.IdentityModel.Tokens
@rendermode InteractiveServer
@attribute [StreamRendering]
@inject ApiHelper ApiHelper

<div class="post">
    <div class="post-header">
        <div class="post-info">
            <div style="text-align: center;">@UserEmail Posts</div>
        </div>
    </div>
</div>
<hr/>
<div>
    @if (_feedPosts.Posts == null || _feedPosts.Posts.Count == 0)
    {
        <i>No posts available</i>
    }
    else
    {
        @foreach (FeedPost p in _feedPosts.Posts)
        {
            <Post PostLine="p"/>
        }
    }
</div>

@code {
    [Parameter] public string UserEmail { get; set; }
    private FeedPostUser User { get; set; }
    private FeedPostList _feedPosts = new FeedPostList(){Posts = new List<FeedPost>()};

    protected override async Task OnInitializedAsync()
    {
        if (UserEmail.IsNullOrEmpty())
        {
            User = await ApiHelper.GetFromApiAsync<FeedPostUser>($"api/Post/find/user/id/{UserState.LoggedInUserId.Value}");
        }
        else
        {
            User = await ApiHelper.GetFromApiAsync<FeedPostUser>($"api/Post/find/user/email/{UserEmail}");
        }
        await LoadPosts();
    }

    private async Task LoadPosts()
    {
        try
        {
            var posts = await ApiHelper.GetFromApiAsync<List<FeedPost>>($"api/Post/index/user/email/{UserEmail}");
            if (posts != null)
            {
                _feedPosts.Posts = posts;
            }
        }
        catch (ApplicationException ex)
        {
            Console.Error.WriteLine($"Failed to fetch posts: {ex.Message}");
        }
        catch (Exception ex)
        {
            Console.Error.WriteLine($"Error: {ex.Message}");
        }
    }
}